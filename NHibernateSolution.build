<?xml version="1.0" ?>

<project 
	name="NHibernate" 
	default="build"
	xmlns="http://nant.sf.net/release/0.85-rc3/nant.xsd"
>

	<property name="root.dir" value="." />

	<include buildfile="${root.dir}/build-common/common.xml" />

	<!-- Disable performance tests by default. They take too much time. -->
	<property name="run.performance.tests" value="false" overwrite="false" />

	<fileset id="buildfiles.all" basedir="src">
		<!-- Files have to be in dependency order -->
		<include name="Iesi.Collections/Iesi.Collections.build" />
		<include name="Iesi.Collections.Test/Iesi.Collections.Test.build" />
		<include name="NHibernate/NHibernate.build" />
		<include name="NHibernate.DomainModel/NHibernate.DomainModel.build" />
		<include name="NHibernate.Test/NHibernate.Test.build" />
		<include name="NHibernate.Test.Performance/NHibernate.Test.Performance.build" />
		<include name="NHibernate.Examples/NHibernate.Examples.build" />
		<include name="NHibernate.Caches.SysCache/NHibernate.Caches.SysCache.build" />
		<include name="NHibernate.Caches.SysCache.Tests/NHibernate.Caches.SysCache.Tests.build" />
		<include name="NHibernate.Caches.Prevalence/NHibernate.Caches.Prevalence.build" />
		<include name="NHibernate.Caches.Prevalence.Tests/NHibernate.Caches.Prevalence.Tests.build" />
		<include name="NHibernate.JetDriver/NHibernate.JetDriver.build" />
		<include name="NHibernate.Mapping.Attributes/NHibernate.Mapping.Attributes.build" />
		<include name="NHibernate.Mapping.Attributes.Test/NHibernate.Mapping.Attributes.Test.build" />
		<include name="NHibernate.Tasks/NHibernate.Tasks.build" />
		<include name="NHibernate.Tool.hbm2net/NHibernate.Tool.hbm2net.build" />
		<include name="NHibernate.Tool.hbm2net.Console/NHibernate.Tool.hbm2net.Console.build" />
		<include name="NHibernate.Tool.hbm2net.Tests/NHibernate.Tool.hbm2net.Tests.build" />
		<include name="NHibernate.UserTypes.Oracle/NHibernate.UserTypes.Oracle.build" />
		<include name="NHibernate.UserTypes.SqlTypes/NHibernate.UserTypes.SqlTypes.build" />
		<include name="NHibernate.UserTypes.Tests/NHibernate.UserTypes.Tests.build" />
		<include name="Nullables/Nullables.build" />
		<include name="Nullables.NHibernate/Nullables.NHibernate.build" />
		<include name="Nullables.Tests/Nullables.Tests.build" />
	</fileset>

	<fileset id="buildfiles.tests" basedir="src">
		<include name="Iesi.Collections.Test/Iesi.Collections.Test.build" />
		<include name="NHibernate.Test/NHibernate.Test.build" />
		<include name="NHibernate.Test.Performance/NHibernate.Test.Performance.build"
			if="${run.performance.tests}" />
		<include name="NHibernate.Caches.SysCache.Tests/NHibernate.Caches.SysCache.Tests.build" />
		<include name="NHibernate.Caches.Prevalence.Tests/NHibernate.Caches.Prevalence.Tests.build" />
		<include name="NHibernate.Mapping.Attributes.Test/NHibernate.Mapping.Attributes.Test.build" />
		<include name="NHibernate.Tool.hbm2net.Tests/NHibernate.Tool.hbm2net.Tests.build" />
		<include name="NHibernate.UserTypes.Tests/NHibernate.UserTypes.Tests.build" />
		<include name="Nullables.Tests/Nullables.Tests.build" />
	</fileset>

	<fileset id="buildfiles.external" basedir="src">
		<include name="HashCodeProvider/HashCodeProvider.build" />
	</fileset>

	<target name="init" depends="common.init"
		description="Initializes build properties" />

	<target
		name="build-external"
		depends="init" 
		description="Builds code that NHibernate depends on but is not a core piece of NHibernate.  The built dll/exes will be distributed in the lib folder so there should be no need for a user to build it."
	>
		<nant target="build">
			<buildfiles refid="buildfiles.external" />
		</nant>
	</target>

	<target name="prepare-build-directory">
		<echo message="Current Directory is ${project::get-base-directory()}" />
		<echo message="Build Directory is ${build.dir}" />

		<!-- Prepare build directory -->
		<mkdir dir="${bin.dir}" />
	</target>

	<target name="copy-referenced-assemblies">
		<!-- Copy framework-neutral libraries -->
		<copy todir="${bin.dir}" >
			<fileset basedir="${lib.dir}">
				<include name="*.dll" />
				<include name="*.xml" />
				<include name="*.license.txt" />
				<include name="nant/*.*" />
			</fileset>
		</copy>
		
		<!-- Copy family-specific libraries -->
		<!-- 
			The builds of log4net and nunit work just fine for all versions of .NET.
			When they do get framework specific extensions then we
			can just move them to the framework specific section
		-->
		<copy todir="${bin.dir}">
			<fileset basedir="${lib.family.dir}">
				<include name="*.dll" />
				<include name="*.xml" />
				<include name="*.license.txt" />
			</fileset>
		</copy>

		<!-- Copy framework-specific libraries -->
		<copy todir="${bin.dir}">
			<fileset basedir="${lib.framework.dir}">
				<!-- 
					Excludes the Iesi.Collections assembly because it is built during the build
					of NHibernate.  It is in the lib folder for VS.NET convenience.  However, we
					do want to copy the license file.
				-->
				<exclude name="Iesi.Collections.dll" />
				<exclude name="Iesi.Collections.xml" />
				<include name="*.dll" />
				<include name="*.xml" />
				<include name="*.license.txt" />
			</fileset>
		</copy>
	</target>

	<target name="build"
		depends="init prepare-build-directory copy-referenced-assemblies"
		description="Builds NHibernate in the current configuration">

		<nant target="build">
			<buildfiles refid="buildfiles.all" />
		</nant>

	</target>

	<target name="test" depends="build" description="Runs all NHibernate tests">

		<nant target="test">
			<buildfiles refid="buildfiles.tests" />
		</nant>

		<if test="${nunit2report.installed}">
			<mkdir dir="${build.dir}/testresults" />
			<nunit2report out="${build.dir}/testresults/index.html" format="Frames" todir="${build.dir}/testresults">
				<fileset>
					<include name="${build.dir}\bin\*results.xml" />
				</fileset>
			</nunit2report>
		</if>
		
		<!-- if this was a clover enabled build then generate the clover reports for it -->
		<call target="coverage-report" if="${clover.enabled}" />
		
		<!-- 
			Clean up all of the non-essential assemblies and files that get put in the
			bin folder to run the test fixtures and that are generated during the running
			of the test fixtures.
		-->
		<delete> 
			<fileset basedir="${bin.dir}">

				<!-- Any hbm.xml and cfg.xml files in the bin are for testing purposes -->
				<include name="*.hbm.xml" />
				<include name="*.cfg.xml" />

				<!-- The MyTest Assembly was used in the AssemblyOrderer fixtures -->
				<include name="MyTest*.dll" />
				<include name="MyTest*.pdb" />

				<!-- 
					Remove test related assemblies and files so the bin directory is 
					clean and ready for the downloader to use. Leave test results for
 					CruiseControl.NET (we exclude them from package)	
				-->
				<include name="Iesi.Collections.Test.*" />
				<include name="NHibernate.DomainModel.*" />
				<include name="NHibernate.Examples.*" />
				<include name="NHibernate.Test.*" />
				<include name="nunit.framework.*" />
				<exclude name="*-results.xml" />

			</fileset>
		</delete>
	</target>
	
	<target name="coverage-report" description="Builds the Test Coverage reports">

		<mkdir dir="${build.dir}/clover" />
		<clover-setup 
			initstring="${clover.db}"
			flushinterval="1000"
		/>

		<clover-report>
			<current title="NHibernate Clover Report" output="${build.dir}/clover" >
				<format type="html" orderby="Alpha" />
			</current>
		</clover-report>

	</target>

	<target name="doc" depends="init doc-clean doc-manual doc-reference"
		description="Builds the Help Documentation and the API documentation" />

	<target name="doc-clean">
		<nant target="clean" buildfile="doc/documentation.build" />
	</target>

	<target name="doc-manual" depends="init" description="Builds the Help Documentation" >
		<property name="lang" value="en" />
		<nant target="build" buildfile="doc/documentation.build">
			<properties>
				<property name="lang" value="${lang}" />
			</properties>
		</nant>
	</target>

	<target name="doc-reference" depends="init" description="Generates the API documentation (in MSDN style and VS.NET 2003 if available)">
		<ndoc>
			<assemblies basedir="${bin.dir}">
				<include name="NHibernate.dll" />
				<include name="Iesi.Collections.dll" />
			</assemblies>
			<summaries>
				<include name="src/NHibernate/NamespaceSummary.xml" />
				<include name="src/Iesi.Collections/NamespaceSummary.xml" />
			</summaries>
			<documenters>
				<documenter name="MSDN">
					<property name="OutputDirectory" value="${build.dir}/doc/temp" />
					<property name="HtmlHelpName" value="NHibernate.Reference" />
					<property name="IncludeFavorites" value="False" />
					<property name="Title" value="NHibernate Class Library - v.${project.version}" />
					<property name="SplitTOCs" value="False" />
					<property name="DefaulTOC" value="" />
					<property name="IncludeHierarchy" value="False" />
					<property name="ShowVisualBasic" value="False" />
					<property name="RootPageContainsNamespaces" value="False" />
					<property name="SortTOCByNamespace" value="True" />
					<property name="OutputTarget" value="HtmlHelp" />
					<property name="HeaderHtml" value="" />
					<property name="FooterHtml" value="" />
					<property name="FilesToInclude" value="" />
					<property name="LinkToSdkDocVersion" value="${link.sdkdoc.version}" />
					<property name="ShowMissingSummaries" value="${build.debug}" />
					<property name="ShowMissingRemarks" value="${build.debug}" />
					<property name="ShowMissingParams" value="${build.debug}" />
					<property name="ShowMissingReturns" value="${build.debug}" />
					<property name="ShowMissingValues" value="${build.debug}" />
					<property name="DocumentInternals" value="False" />
					<property name="DocumentProtected" value="True" />
					<property name="DocumentPrivates" value="False" />
					<property name="DocumentProtectedInternalAsProtected" value="False" />
					<property name="DocumentEmptyNamespaces" value="False" />
					<property name="IncludeAssemblyVersion" value="False" />
					<property name="CopyrightText" value="NHibernate is licensed under GNU LGPL." />
					<property name="CopyrightHref" value="http://www.nhibernate.org/" />
					<property name="FeedbackEmailAddress" value="nhibernate-development@lists.sourceforge.net" />
					<property name="ReferencesPath" value="" />
					<property name="SkipNamespacesWithoutSummaries" value="False" />
					<property name="UseNamespaceDocSummaries" value="False" />
					<property name="AutoPropertyBackerSummaries" value="False" />
					<property name="AutoDocumentConstructors" value="True" />
					<property name="DocumentAttributes" value="True" />
					<property name="ShowTypeIdInAttributes" value="False" />
					<property name="DocumentedAttributes" value="" />
					<property name="GetExternalSummaries" value="True" />
					<property name="EditorBrowsableFilter" value="Off" />
					<property name="UseNDocXmlFile" value="" />
				</documenter>
			</documenters> 
		</ndoc>
		<copy todir="${build.dir}/doc">
			<fileset basedir="${build.dir}/doc/temp">
				<include name="*.chm" />
			</fileset>
		</copy>
		
		<if test="${vshik.installed}">
			<ndoc>
				<assemblies basedir="${bin.dir}">
					<include name="NHibernate.dll" />
					<include name="Iesi.Collections.dll" />
				</assemblies>
				<summaries>
					<include name="src/NHibernate/NamespaceSummary.xml" />
					<include name="src/Iesi.Collections/NamespaceSummary.xml" />
				</summaries>
				<documenters>
					<documenter name="VS.NET 2003">
						<property name="OutputDirectory" value="${build.dir}/doc/temp" />
						<property name="HtmlHelpName" value="NHibernate.Reference" />
						<property name="Title" value="NHibernate Class Library - v.${project.version}" />
						<property name="HeaderHtml" value="" />
						<property name="FooterHtml" value="" />
						<property name="LinkToSdkDocVersion" value="${link.sdkdoc.version}" />
						<property name="ShowMissingSummaries" value="${build.debug}" />
						<property name="ShowMissingRemarks" value="${build.debug}" />
						<property name="ShowMissingParams" value="${build.debug}" />
						<property name="ShowMissingReturns" value="${build.debug}" />
						<property name="ShowMissingValues" value="${build.debug}" />
						<property name="DocumentInternals" value="False" />
						<property name="DocumentProtected" value="True" />
						<property name="DocumentPrivates" value="False" />
						<property name="DocumentProtectedInternalAsProtected" value="False" />
						<property name="DocumentEmptyNamespaces" value="False" />
						<property name="CopyrightText" value="NHibernate is licensed under GNU LGPL." />
						<property name="CopyrightHref" value="http://www.nhibernate.org/" />
						<property name="FeedbackEmailAddress" value="nhibernate-development@lists.sourceforge.net" />
						<property name="ReferencesPath" value="" />
						<property name="SkipNamespacesWithoutSummaries" value="False" />
						<property name="UseNamespaceDocSummaries" value="False" />
						<property name="AutoPropertyBackerSummaries" value="False" />
						<property name="AutoDocumentConstructors" value="True" />
						<property name="DocumentAttributes" value="True" />
						<property name="ShowTypeIdInAttributes" value="False" />
						<property name="DocumentedAttributes" value="" />
						<property name="EditorBrowsableFilter" value="Off" />
						<property name="UseNDocXmlFile" value="" />
					</documenter>
				</documenters> 
			</ndoc>

			<copy todir="${build.dir}/doc">
				<fileset basedir="${build.dir}/doc/temp">
					<include name="*.HxS" />
				</fileset>
			</copy>
			<copy todir="${build.dir}/doc">
				<fileset basedir="doc/Help2">
					<include name="*" />
				</fileset>
			</copy>
		</if>

		<delete dir="${build.dir}/doc/temp" />
		
	</target>

	<target name="merge">
		<if test="${property::exists('merge.targetplatform')}">
			<exec program="ilmerge.exe" basedir="external-bin" useruntimeengine="true">
				<arg value="/ndebug:${build.debug}" />
				<arg value="/lib:${bin.dir}" />
				<arg value="/targetplatform:${merge.targetplatform}" />
				<arg value="/keyfile:src/NHibernate.snk" if="${sign}" />
				<arg value="/out:${build.dir}/NHibernate.dll" />
				<arg value="NHibernate.dll" />
				<arg value="HashCodeProvider.dll" />
			</exec>

			<!-- clean up -->
			<delete file="${bin.dir}/NHibernate.dll" />
			<delete file="${bin.dir}/HashCodeProvider.dll" />
			<delete file="${bin.dir}/HashCodeProvider.license.txt" />
			<move file="${build.dir}/NHibernate.dll" tofile="${bin.dir}/NHibernate.dll" />
		</if>
	</target>

	<target name="package" depends="test doc merge" description="Creates Zip files for the File Release System on SourceForge">
		
		<!-- Copy and rename the license -->
		<copy file="lgpl.txt" tofile="${bin.dir}/NHibernate.license.txt"  />

		<copy todir="${build.dir}">
			<fileset>
				<!-- copy dlls used by this build -->
				<include name="${lib.dir}/*"  />
				<include name="${lib.family.dir}/*" />
				<include name="${lib.framework.dir}/*" />
				<include name="external-bin/ILMerge.exe" />

				<!-- copy all of the NHibernate source -->
				<include name="src/Iesi.Collections.*/**" />
				<include name="src/NHibernate/**" />
				<include name="src/NHibernate.DomainModel/**" />
				<include name="src/NHibernate.Eg/**" />
				<include name="src/NHibernate.Examples.*/**" />
				<include name="src/NHibernate.Test*/**" />
				
				<include name="NHibernateSolution.build" />
				<include name="gfdl.txt" />
				<include name="lgpl.txt" />
				<include name="releasenotes.txt" />
				<include name="readme.html" />
				
				<!-- exclude the Clover modified source files. -->
				<exclude name="${clover.src}/**" />
				
				<!-- exclude ReSharper stuff -->
				<exclude name="**/_ReSharper*/**" />
				<exclude name="**/*.resharperoptions" />
				
				<!-- exclude VS.NET stuff -->
				<exclude name="**/*.suo" />
				<exclude name="**/*proj.user" />
				<exclude name="**/bin/**" />
				<exclude name="**/obj/**" />
			</fileset>
		</copy>

		<zip zipfile="${nant.project.basedir}/build/${build.name}-clover-${nant.settings.currentframework}.zip" ziplevel="9">
			<fileset basedir="${build.dir}">
				<include name="clover/**" />
			</fileset>
		</zip>

		<property name="project.zip-path" value="${nant.project.basedir}/build/${build.name}-${nant.settings.currentframework}.zip" />

		<zip zipfile="${project.zip-path}" ziplevel="9">
			<fileset basedir="${build.dir}">
				<include name="**/*" />
				<exclude name="clover/**" />
				<exclude name="bin/log.txt" />
				<exclude name="bin/*-results.xml" />
			</fileset>
		</zip>

		<echo message="Created a '${project.config}' package as file://${project.zip-path}" />
		
	</target>

	<target name="fxcop" depends="init" >
 		<exec program="${fxcop.exe}" 
 			  commandline="/f:${build.dir}\bin\nhibernate.dll /o:${build.dir}\bin\fxcop-results.xml"
 			  failonerror="false"/>
 	</target>
 	
 	<target name="simian" depends="init" >
 		<exec program="${simian.exe}" verbose="true" 
 			  commandline="-recurse=src/*.cs -formatter=xml:${build.dir}\bin\simian-results.xml -failOnDuplication-"
 			  failonerror="false"/>
 	</target>

	<target name="visual-studio" depends="init">
		<property name="visual-studio" value="true" />
		<nant target="generate-assemblyinfo">
			<buildfiles refid="buildfiles.all" />
		</nant>
	</target>

	<target name="cleanall" description="Deletes every build configuration">
		<echo message="Deleting all builds from all configurations" />
		<delete dir="build" failonerror="false" />
		<delete dir="${clover.src}" failonerror="false" />
	</target>

	<target name="clean" depends="init" description="Deletes current build">
		<delete dir="${build.dir}" failonerror="false" />
		<delete dir="${clover.src}" failonerror="false" />
	</target>

	<target name="clean-bin" depends="init" description="Deletes the current bin folder">
		<delete dir="${bin.dir}" failonerror="false" />
	</target>

</project>
