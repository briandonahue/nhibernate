//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: v1.1.4322
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Collections;

namespace NHibernate.DomainModel
{

 /// <summary>
 /// POJO for Baz
 /// </summary>
 /// <remark>
 /// This class is autogenerated
 /// </remark>
 [Serializable]
 public class Baz : IComparable
 {

	 /// <summary>
	 /// Holds the _collectionComponent
	 /// </summary> 
	 private NestingComponent _collectionComponent;

	 /// <summary>
	 /// Gets or sets the _collectionComponent
	 /// </summary> 
	 public NestingComponent collectionComponent
	 {
		 get 
		 {
			 return _collectionComponent; 
		 }
		 set 
		 {
			 _collectionComponent = value;
		 }
	 }
	#region Fields
	/// <summary>
	/// Holder for code
	/// </summary>
	private String _code;


	 /// <summary>
	 /// Holds the _timeArray
	 /// </summary> 
	 private DateTime[] _timeArray;

	 /// <summary>
	 /// Gets or sets the _timeArray
	 /// </summary> 
	 public DateTime[] timeArray
	 {
		 get 
		 {
			 return _timeArray; 
		 }
		 set 
		 {
			 _timeArray = value;
		 }
	 }
	 /// <summary>
	 /// Holds the _components
	 /// </summary> 
	 private FooComponent[] _components;

	 /// <summary>
	 /// Gets or sets the _components
	 /// </summary> 
	 public FooComponent[] components
	 {
		 get 
		 {
			 return _components; 
		 }
		 set 
		 {
			 _components = value;
		 }
	 }
	 /// <summary>
	 /// Holds the stringArray
	 /// </summary> 
	 private string[] _stringArray;

	 /// <summary>
	 /// Gets or sets the stringArray
	 /// </summary> 
	 public string[] stringArray
	 {
		 get 
		 {
			 return _stringArray; 
		 }
		 set 
		 {
			 _stringArray = value;
		 }
	 }
	 
	 /// <summary>
	 /// Holds the intArray
	 /// </summary> 
	 private int[] _intArray;

	 /// <summary>
	 /// Gets or sets the intArray
	 /// </summary> 
	 public int[] intArray
	 {
		 get 
		 {
			 return _intArray; 
		 }
		 set 
		 {
			 _intArray = value;
		 }
	 }
	 /// <summary>
	 /// Holds the fooArray
	 /// </summary> 
	 private FooProxy[] _fooArray;

	 /// <summary>
	 /// Gets or sets the fooArray
	 /// </summary> 
	 public FooProxy[] fooArray
	 {
		 get 
		 {
			 return _fooArray; 
		 }
		 set 
		 {
			 _fooArray = value;
		 }
	 }

	/// <summary>
	/// Holder for count
	/// </summary>
	private Int32 _count;
	
	/// <summary>
	/// Holder for name
	/// </summary>
	private String _name;
	
	/// <summary>
	/// Holder for foo
	/// </summary>
	private Foo _foo;
	
	/// <summary>
	/// Holder for stringList
	/// </summary>
	private System.Collections.IList _stringList;
	
	/// <summary>
	/// Holder for fees
	/// </summary>
	private System.Collections.IList _fees;
	
	/// <summary>
	/// Holder for customs
	/// </summary>
	private System.Collections.IList _customs;
	
	/// <summary>
	/// Holder for topComponents
	/// </summary>
	private System.Collections.IList _topComponents;
	
	/// <summary>
	/// Holder for fooToGlarch
	/// </summary>
	private System.Collections.IDictionary _fooToGlarch;
	
	/// <summary>
	/// Holder for fooComponentToFoo
	/// </summary>
	private System.Collections.IDictionary _fooComponentToFoo;
	
	/// <summary>
	/// Holder for glarchToFoo
	/// </summary>
	private System.Collections.IDictionary _glarchToFoo;
	
	/// <summary>
	/// Holder for stringDateMap
	/// </summary>
	private System.Collections.SortedList _stringDateMap;
	
	/// <summary>
	/// Holder for topGlarchez
	/// </summary>
	private System.Collections.IDictionary _topGlarchez;
	
	/// <summary>
	/// Holder for cachedMap
	/// </summary>
	private System.Collections.SortedList _cachedMap;
	
	/// <summary>
	/// Holder for stringGlarchMap
	/// </summary>
	private System.Collections.IDictionary _stringGlarchMap;
	
	/// <summary>
	/// Holder for anyToAny
	/// </summary>
	private System.Collections.IDictionary _anyToAny;
	
	/// <summary>
	/// Holder for fooSet
	/// </summary>
	private System.Collections.IDictionary _fooSet;
	
	/// <summary>
	/// Holder for stringSet
	/// </summary>
	private System.Collections.IList _stringSet;
	
	/// <summary>
	/// Holder for topFoos
	/// </summary>
	private System.Collections.IDictionary _topFoos;
	
	/// <summary>
	/// Holder for cascadingBars
	/// </summary>
	private System.Collections.IDictionary _cascadingBars;
	
	/// <summary>
	/// Holder for cached
	/// </summary>
	private System.Collections.IList _cached;
	
	/// <summary>
	/// Holder for sortablez
	/// </summary>
	private System.Collections.IDictionary _sortablez;
	
	/// <summary>
	/// Holder for bag
	/// </summary>
	private System.Collections.IList _bag;
	
	/// <summary>
	/// Holder for fooBag
	/// </summary>
	private System.Collections.IList _fooBag;
	
	/// <summary>
	/// Holder for bazez
	/// </summary>
	private System.Collections.IList _bazez;
	
	/// <summary>
	/// Holder for idFooBag
	/// </summary>
	private System.Collections.IList _idFooBag;
	
	/// <summary>
	/// Holder for byteBag
	/// </summary>
	private System.Collections.IList _byteBag;
	
	#endregion

	#region Constructors
	/// <summary>
	/// Default constructor for class Baz
	/// </summary>
	public Baz()
	{
	}
	
	
	#endregion
	
	#region Properties
	/// <summary>
	/// Get/set for code
	/// </summary>
	public String code
	{
		get
		{
			return this._code;
		}
		set
		{
			this._code = value;
		}
	}
	
	/// <summary>
	/// Get/set for count
	/// </summary>
	public Int32 count
	{
		get
		{
			return this._count;
		}
		set
		{
			this._count = value;
		}
	}
	
	/// <summary>
	/// Get/set for name
	/// </summary>
	public String name
	{
		get
		{
			return this._name;
		}
		set
		{
			this._name = value;
		}
	}
	
	/// <summary>
	/// Get/set for foo
	/// </summary>
	public Foo foo
	{
		get
		{
			return this._foo;
		}
		set
		{
			this._foo = value;
		}
	}
	
	/// <summary>
	/// Get/set for stringList
	/// </summary>
	public System.Collections.IList stringList
	{
		get
		{
			return this._stringList;
		}
		set
		{
			this._stringList = value;
		}
	}
	
	/// <summary>
	/// Get/set for fees
	/// </summary>
	public System.Collections.IList fees
	{
		get
		{
			return this._fees;
		}
		set
		{
			this._fees = value;
		}
	}
	
	/// <summary>
	/// Get/set for customs
	/// </summary>
	public System.Collections.IList customs
	{
		get
		{
			return this._customs;
		}
		set
		{
			this._customs = value;
		}
	}
	
	/// <summary>
	/// Get/set for topComponents
	/// </summary>
	public System.Collections.IList topComponents
	{
		get
		{
			return this._topComponents;
		}
		set
		{
			this._topComponents = value;
		}
	}
	
	/// <summary>
	/// Get/set for fooToGlarch
	/// </summary>
	public System.Collections.IDictionary fooToGlarch
	{
		get
		{
			return this._fooToGlarch;
		}
		set
		{
			this._fooToGlarch = value;
		}
	}
	
	/// <summary>
	/// Get/set for fooComponentToFoo
	/// </summary>
	public System.Collections.IDictionary fooComponentToFoo
	{
		get
		{
			return this._fooComponentToFoo;
		}
		set
		{
			this._fooComponentToFoo = value;
		}
	}
	
	/// <summary>
	/// Get/set for glarchToFoo
	/// </summary>
	public System.Collections.IDictionary glarchToFoo
	{
		get
		{
			return this._glarchToFoo;
		}
		set
		{
			this._glarchToFoo = value;
		}
	}
	
	/// <summary>
	/// Get/set for stringDateMap
	/// </summary>
	public System.Collections.SortedList stringDateMap
	{
		get
		{
			return this._stringDateMap;
		}
		set
		{
			this._stringDateMap = value;
		}
	}
	
	/// <summary>
	/// Get/set for topGlarchez
	/// </summary>
	public System.Collections.IDictionary topGlarchez
	{
		get
		{
			return this._topGlarchez;
		}
		set
		{
			this._topGlarchez = value;
		}
	}
	
	/// <summary>
	/// Get/set for cachedMap
	/// </summary>
	public System.Collections.SortedList cachedMap
	{
		get
		{
			return this._cachedMap;
		}
		set
		{
			this._cachedMap = value;
		}
	}
	
	/// <summary>
	/// Get/set for stringGlarchMap
	/// </summary>
	public System.Collections.IDictionary stringGlarchMap
	{
		get
		{
			return this._stringGlarchMap;
		}
		set
		{
			this._stringGlarchMap = value;
		}
	}
	
	/// <summary>
	/// Get/set for anyToAny
	/// </summary>
	public System.Collections.IDictionary anyToAny
	{
		get
		{
			return this._anyToAny;
		}
		set
		{
			this._anyToAny = value;
		}
	}
	
	/// <summary>
	/// Get/set for fooSet
	/// </summary>
	public System.Collections.IDictionary fooSet
	{
		get
		{
			return this._fooSet;
		}
		set
		{
			this._fooSet = value;
		}
	}
	
	/// <summary>
	/// Get/set for stringSet
	/// </summary>
	public System.Collections.IList stringSet
	{
		get
		{
			return this._stringSet;
		}
		set
		{
			this._stringSet = value;
		}
	}
	
	/// <summary>
	/// Get/set for topFoos
	/// </summary>
	public System.Collections.IDictionary topFoos
	{
		get
		{
			return this._topFoos;
		}
		set
		{
			this._topFoos = value;
		}
	}
	
	/// <summary>
	/// Get/set for cascadingBars
	/// </summary>
	public System.Collections.IDictionary cascadingBars
	{
		get
		{
			return this._cascadingBars;
		}
		set
		{
			this._cascadingBars = value;
		}
	}
	
	/// <summary>
	/// Get/set for cached
	/// </summary>
	public System.Collections.IList cached
	{
		get
		{
			return this._cached;
		}
		set
		{
			this._cached = value;
		}
	}
	
	/// <summary>
	/// Get/set for sortablez
	/// </summary>
	public System.Collections.IDictionary sortablez
	{
		get
		{
			return this._sortablez;
		}
		set
		{
			this._sortablez = value;
		}
	}
	
	/// <summary>
	/// Get/set for bag
	/// </summary>
	public System.Collections.IList bag
	{
		get
		{
			return this._bag;
		}
		set
		{
			this._bag = value;
		}
	}
	
	/// <summary>
	/// Get/set for fooBag
	/// </summary>
	public System.Collections.IList fooBag
	{
		get
		{
			return this._fooBag;
		}
		set
		{
			this._fooBag = value;
		}
	}
	
	/// <summary>
	/// Get/set for bazez
	/// </summary>
	public System.Collections.IList bazez
	{
		get
		{
			return this._bazez;
		}
		set
		{
			this._bazez = value;
		}
	}
	
	/// <summary>
	/// Get/set for idFooBag
	/// </summary>
	public System.Collections.IList idFooBag
	{
		get
		{
			return this._idFooBag;
		}
		set
		{
			this._idFooBag = value;
		}
	}
	
	/// <summary>
	/// Get/set for byteBag
	/// </summary>
	public System.Collections.IList byteBag
	{
		get
		{
			return this._byteBag;
		}
		set
		{
			this._byteBag = value;
		}
	}
	
	#endregion

	 public void setDefaults() 
	 {
		 stringSet = new ArrayList();
		 stringSet.Add("foo"); stringSet.Add("bar"); stringSet.Add("baz");
		 stringDateMap = new SortedList();
		 stringDateMap.Add( "now", DateTime.Now );
		 stringDateMap.Add( "never", null );
		 stringDateMap.Add( "big bang", new DateTime(0) );
		 ArrayList list = new ArrayList();
		 list.AddRange(stringSet);
		 stringList = list;
		 intArray = new int[] { 1,3,3,7 };
		 fooArray =new Foo[0];
		 stringArray = (String[]) list.ToArray(typeof(string) );
		 customs = new ArrayList();
		 customs.Add( new String[] { "foo", "bar" } );
		 customs.Add( new String[] { "A", "B" } );
		 customs.Add( new String[] { "1", "2" } );
		
		 fooSet = new Hashtable();
		 components = new FooComponent[] {
											 new FooComponent("foo", 42, null, null),
											 new FooComponent("bar", 88, null, new FooComponent("sub", 69, null, null) )
										 };
		 timeArray = new DateTime[] { new DateTime(), new DateTime(), DateTime.MinValue, new DateTime(0) };
		
		 count = 667;
		 name="Bazza";
		 topComponents = new ArrayList();
		 topComponents.Add( new FooComponent("foo", 11, new DateTime[] { new DateTime(), new DateTime(2123,1,1) }, null) );
		 topComponents.Add( new FooComponent("bar", 22, new DateTime[] { new DateTime(2007,2,3), new DateTime(1945,6,1) }, null) );
		 topComponents.Add( null );
		 bag = new ArrayList();
		 bag.Add("duplicate");
		 bag.Add("duplicate");
		 bag.Add("duplicate");
		 bag.Add("unique");
		 cached = new ArrayList();
		 CompositeElement ce = new CompositeElement();
		 ce.foo = "foo";
		 ce.bar = "bar";
		 CompositeElement ce2 = new CompositeElement();
		 ce2.foo = "fooxxx";
		 ce2.bar = "barxxx";
		 cached.Add(ce);
		 cached.Add(ce2);
		 cachedMap = new SortedList();
		 cachedMap.Add(this, ce);
	 }
	 #region IComparable Members

	 public int CompareTo(object obj)
	 {
		 return ( (Baz) obj ).code.CompareTo(code);
	 }

	 #endregion
 }
}