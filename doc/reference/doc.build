<?xml version="1.0" ?>
<project 
	name="doc" 
	default="build" 
	xmlns="http://nant.sf.net/release/0.85-rc3/nant.xsd"
>
	<!--
		Required properties:
			* build.dir	- (path) root level to copy built documentation to.  Only needed by package task.
	-->
	
	<!-- 
		I have not figured out a way to modify the Path through NAnt so you
		need to make sure that xsltproc is in the path.  
		
		2005-05-03: probably is doable with nant-0.85 but I'm not going to mess with
		it since the easy solution is put xsltproc in the path.
	-->
	
	<property name="lang" value="en" />
	<property name="output.dir" value="build/${lang}" />
	
	<target name="clean" description="Cleans any previous builds">
		<delete dir="${output.dir}" failonerror="false" />
	</target>
	
	<target name="build" description="Generates the documentation in multiple formats from the docbook files.">
		<call target="build-html" />
		<call target="build-chm" />
	</target>
	
	<target name="build-html" description="Generates html from docbook files.">
		 
		<property name="build.html.dir" value="${output.dir}/html" />
		<property name="build.single.dir" value="${build.html.dir}/single" />
		<property name="build.chunk.dir" value="${build.html.dir}/chunk" />
		<property name="build.styles.dir" value="${build.html.dir}/styles" />
		<property name="build.images.dir" value="${build.html.dir}/images" />
		
		<mkdir dir="${build.html.dir}" failonerror="false" />
		<mkdir dir="${build.single.dir}" failonerror="false" />
		<mkdir dir="${build.chunk.dir}" failonerror="false" />
		<mkdir dir="${build.styles.dir}" failonerror="false" />
		<mkdir dir="${build.images.dir}" failonerror="false" />

		<exec program="xsltproc" >
			<arg value="--output" />
			<arg file="${build.single.dir}/reference.html" /><!-- file to output transform results to -->
			<arg file="${lang}/styles/html.xsl" /><!-- xsl to do the transforming -->
			<arg file="${lang}/master.xml" /><!-- xml file to transform -->
		</exec>
	
		<exec program="xsltproc" >
			<arg value="--output" />
			<arg path="${build.chunk.dir}/" /><!-- dir to output transform results to (add the trailing '/' for xsltproc) -->
			<arg file="${lang}/styles/html_chunk.xsl" /><!-- xsl to do the transforming -->
			<arg file="${lang}/master.xml" /><!-- xml file to transform -->
		</exec>
		
		<copy todir="${build.html.dir}">
			<fileset basedir="${lang}">
				<include name="styles/html.css" />
				<include name="images/**.*" />
			</fileset>
		</copy>
		
	</target>
	
	<target name="build-chm" description="Generates chm file from docbook files.">
		
		<!-- default install location -->
		<property name="hhc.exe" value="C:\Program Files\HTML Help Workshop\hhc" />
		<property name="build.chm.dir" value="${output.dir}/chm" />
		
		<mkdir dir="${build.chm.dir}" failonerror="false" />
		
		<!-- make the htmlhelp version of the helpfile -->
		<exec program="xsltproc">
			<arg value="--output" />
			<arg path="${build.chm.dir}/" /><!-- dir to output transform results to (add the trailing '/' for xsltproc) -->
			<arg file="${lang}/styles/htmlhelp.xsl" /> <!-- xsl to do the transforming -->
			<arg file="${lang}/master.xml" /> <!-- xml file to transform -->
		</exec>
		
		<!-- 
			put the styles and images under the chm folder - no need to 
			have them in their own folder so flatten the copy task.
		-->
		<copy todir="${build.chm.dir}" flatten="true">
			<fileset basedir="${lang}">
				<include name="styles/*.css" />
				<include name="images/**.*" />
			</fileset>
		</copy>
		
		<exec program="${hhc.exe}">
			<arg file="${build.chm.dir}/htmlhelp.hhp" />
		</exec> 
		
		<delete>
			<fileset basedir="${build.chm.dir}">
				<include name="*" />
				<exclude name="*.chm" />
			</fileset>
		</delete>
		
	</target>
	
	<target name="package" depends="build" description="Copies the files built into the local build dir into the NH build dir.">
		<move todir="${build.dir}/doc/help">
			<fileset basedir="${output.dir}">
				<include name="**/*" />
			</fileset>
		</move>
	</target>
</project>

