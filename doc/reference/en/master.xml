<?xml version="1.0"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
  "../support/docbook-dtd/docbookx.dtd" [
  <!ENTITY architecture SYSTEM "modules/architecture.xml">
  <!ENTITY basic-mapping SYSTEM "modules/basic_mapping.xml">

]>

<book lang="en">

    <bookinfo>
        <title>NHibernate - Relational Persistence for Idiomatic .NET</title>
        <subtitle>NHibernate Reference Documentation</subtitle>
        <releaseinfo>Alpha</releaseinfo>
    </bookinfo>

    <toc/>

    <preface id="preface" revision="1">
        <title>Preface</title>

        <para>
            Working with object-oriented software and a relational database can be cumbersome
            and time consuming in today's enterprise environments. NHibernate is an object/relational
            mapping tool for .NET environments. The term object/relational mapping (ORM) refers to
            the technique of mapping a data representation from an object model to a relational
            data model with a SQL-based schema.
        </para>

        <para>
            NHibernate not only takes care of the mapping from .NET classes to
            database tables (and from .NET data types to SQL data types), but also provides data
            query and retrieval facilities and can significantly reduce development time otherwise
            spent with manual data handling in SQL and ADO.NET.
        </para>

        <para>
            NHibernate's goal is to relieve the developer from 95 percent of common data persistence
            related programming tasks. NHibernate may not be the best solution for data-centric
            applications that only use stored-procedures to implement the business logic in the
            database, it is most useful with object-oriented domain models and business logic in
            the .NET-based middle-tier. However, NHibernate can certainly help you to remove or
            encapsulate vendor-specific SQL code and will help with the common task of result set
            translation from a tabular representation to a graph of objects.
        </para>

        <para>
            If you are new to NHibernate and Object/Relational Mapping or even .NET,
            please follow these steps:
        </para>

        <orderedlist>
            <!--<listitem>
                <para>
                    Read <xref linkend="quickstart"/>for a 30 minute tutorial, using Tomcat.
                </para>
            </listitem>--> 
            <listitem>
                <para>
                    Read <xref linkend="architecture"/> to understand the environments where
                    NHibernate can be used.
                </para>
            </listitem>
            <listitem>
                <para>
                    Have a look at the <literal>eg/</literal> directory in the Hibernate
                    distribution, it contains a simple standalone application. Copy your
                    JDBC driver to the <literal>lib/</literal> directory and edit
                    <literal>etc/hibernate.properties</literal>, specifying correct values for
                    your database. From a command prompt in the distribution directory,
                    type <literal>ant eg</literal> (using Ant), or under Windows, type
                    <literal>build eg</literal>.
                </para>
            </listitem>
            <listitem>
				<para>
					FAQs are answered on the NHibernate website.
				</para>
            </listitem>
			
         </orderedlist>

         <para>
             If you have questions, use the user forum linked on the NHibernate website. We also
             provide a JIRA issue trackings system for bug reports and feature requests. If you
             are interested in the development of NHibernate, join the developer mailing list. If
             you are interested in translating this documentation into your language, contact us
             on the developer mailing list.
         </para>

    </preface>
 
  &architecture;
  &basic-mapping;
  <index id="index"/>
</book>